{"hash":"57a0b87c5d49d3f3de3ee4e94d0232d4bfad60d2","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Component, Inject, Injectable, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport * as i1 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i2 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass LuxalLightboxComponent {\n    constructor(data) {\n        this.data = data;\n        this.increment = 0;\n    }\n    ngOnInit() {\n        this.addArrowListener();\n    }\n    addArrowListener() {\n        document.addEventListener('keydown', (event) => {\n            switch (event.keyCode) {\n                case 37:\n                    this.prev();\n                    break;\n                case 39:\n                    this.next();\n                    break;\n            }\n        });\n    }\n    next() {\n        if (!(this.increment + 1 >= this.data.length)) {\n            this.increment++;\n        }\n        else {\n            this.increment = 0;\n        }\n    }\n    prev() {\n        if (this.increment - 1 >= 0) {\n            this.increment--;\n        }\n        else {\n            this.increment = this.data.length - 1;\n        }\n    }\n    downloadPhoto() {\n        // @ts-ignore\n        document.getElementById('imgLink').click();\n    }\n}\nLuxalLightboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxComponent, deps: [{ token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component });\nLuxalLightboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: LuxalLightboxComponent, selector: \"lib-luxal-lightbox\", ngImport: i0, template: \"<ng-container *ngIf=\\\"data[increment] && data\\\">\\n  <div class=\\\"text-right\\\">\\n    <button class=\\\"float-btn\\\" mat-dialog-close mat-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n    <button class=\\\"mid-left nav-btn\\\" mat-button (click)=\\\"prev()\\\">\\n      <mat-icon>chevron_left</mat-icon>\\n    </button>\\n    <button class=\\\"nav-btn mid-right\\\" (click)=\\\"next()\\\" mat-button>\\n      <mat-icon>navigate_next</mat-icon>\\n    </button>\\n    <button (click)=\\\"downloadPhoto()\\\" class=\\\"float-down-btn\\\" mat-button>\\n      <mat-icon>file_download</mat-icon>\\n    </button>\\n    <a id=\\\"imgLink\\\" download=\\\"imagename.png\\\" [href]=\\\"data[increment].uri\\\"></a>\\n  </div>\\n  <div\\n    class=\\\"slide\\\"\\n    (swipeleft)=\\\"prev()\\\"\\n    (swiperight)=\\\"next()\\\"\\n    [style.background-image]=\\\"'url(' + data[increment].uri+ ')'\\\"\\n    [ngStyle]=\\\"data[increment].imageCssProperty\\\"\\n  >\\n    <div class=\\\"row\\\">\\n      <div id=\\\"btn-col-1\\\" class=\\\"col-6 text-left\\\"></div>\\n      <div id=\\\"btn-col-2\\\" class=\\\"col-6 text-right\\\"></div>\\n    </div>\\n  </div>\\n\\n</ng-container>\\n\", styles: [\"::ng-deep .mat-dialog-container{padding:0!important}.slide{background-size:cover;overflow:hidden;max-width:100%;background-position:center}.nav-btn{background-color:transparent;color:#fff}.float-btn{margin-top:30px;color:#fff;margin-right:30px;position:absolute;top:0;right:0}.mid-left{top:50%;left:1rem;transform:translateY(-50%);position:absolute}.mid-right{top:50%;right:2rem;transform:translateY(-50%);position:absolute}.float-down-btn{position:fixed;bottom:4rem;z-index:3;right:2rem;background-color:transparent;color:#fff}.slide{zoom:.8}.slide{zoom:.7}.slide{zoom:.6}\\n\"], components: [{ type: i1.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: [\"aria-label\", \"type\", \"mat-dialog-close\", \"matDialogClose\"], exportAs: [\"matDialogClose\"] }, { type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-luxal-lightbox', template: \"<ng-container *ngIf=\\\"data[increment] && data\\\">\\n  <div class=\\\"text-right\\\">\\n    <button class=\\\"float-btn\\\" mat-dialog-close mat-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n    <button class=\\\"mid-left nav-btn\\\" mat-button (click)=\\\"prev()\\\">\\n      <mat-icon>chevron_left</mat-icon>\\n    </button>\\n    <button class=\\\"nav-btn mid-right\\\" (click)=\\\"next()\\\" mat-button>\\n      <mat-icon>navigate_next</mat-icon>\\n    </button>\\n    <button (click)=\\\"downloadPhoto()\\\" class=\\\"float-down-btn\\\" mat-button>\\n      <mat-icon>file_download</mat-icon>\\n    </button>\\n    <a id=\\\"imgLink\\\" download=\\\"imagename.png\\\" [href]=\\\"data[increment].uri\\\"></a>\\n  </div>\\n  <div\\n    class=\\\"slide\\\"\\n    (swipeleft)=\\\"prev()\\\"\\n    (swiperight)=\\\"next()\\\"\\n    [style.background-image]=\\\"'url(' + data[increment].uri+ ')'\\\"\\n    [ngStyle]=\\\"data[increment].imageCssProperty\\\"\\n  >\\n    <div class=\\\"row\\\">\\n      <div id=\\\"btn-col-1\\\" class=\\\"col-6 text-left\\\"></div>\\n      <div id=\\\"btn-col-2\\\" class=\\\"col-6 text-right\\\"></div>\\n    </div>\\n  </div>\\n\\n</ng-container>\\n\", styles: [\"::ng-deep .mat-dialog-container{padding:0!important}.slide{background-size:cover;overflow:hidden;max-width:100%;background-position:center}.nav-btn{background-color:transparent;color:#fff}.float-btn{margin-top:30px;color:#fff;margin-right:30px;position:absolute;top:0;right:0}.mid-left{top:50%;left:1rem;transform:translateY(-50%);position:absolute}.mid-right{top:50%;right:2rem;transform:translateY(-50%);position:absolute}.float-down-btn{position:fixed;bottom:4rem;z-index:3;right:2rem;background-color:transparent;color:#fff}.slide{zoom:.8}.slide{zoom:.7}.slide{zoom:.6}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DIALOG_DATA]\n                }] }]; } });\n\nconst LANDSCAPE_ASPECT_RATIO = '4/3';\nconst LANDSCAPE_ASPECT_RATIO_PERCENTAGE = '56.25%';\nconst PORTRAIT_ASPECT_RATIO = '10/16';\nconst PORTRAIT_ASPECT_RATIO_PERCENTAGE = '156.25%';\n\nclass LuxalLightboxService {\n    constructor(dialog) {\n        this.dialog = dialog;\n        this.listOfImages = [];\n    }\n    openGallery(data) {\n        this.getImageData(data).then(() => {\n            this.dialog\n                .open(LuxalLightboxComponent, {\n                data: this.listOfImages,\n                width: window.screen.width <= 1024 ? \"100%\" : \"auto\",\n            })\n                .afterClosed()\n                .subscribe(() => {\n                this.listOfImages = [];\n            });\n        });\n    }\n    async getImageData(medias) {\n        let counter = 0;\n        while (counter < medias.length) {\n            let img = new Image();\n            img.src = medias[counter].uri;\n            img.onload = () => {\n                medias[counter].width = img.width;\n                medias[counter].height = img.height;\n                this.getImageProperties(medias[counter]);\n                counter++;\n            };\n            if (medias.indexOf(medias[counter]) === medias.length - 1) {\n                return new Promise((resolve) => resolve());\n            }\n        }\n    }\n    getImageProperties(image) {\n        if (image.height > image.width) {\n            image.imageCssProperty = {\n                aspectRatio: PORTRAIT_ASPECT_RATIO,\n            };\n        }\n        else if (image.height <= image.width) {\n            image.imageCssProperty = {\n                aspectRatio: LANDSCAPE_ASPECT_RATIO,\n            };\n        }\n        if (window.screen.width >= 700) {\n            image.imageCssProperty[\"height\"] = \"1080px\";\n        }\n        this.listOfImages.push(image);\n    }\n}\nLuxalLightboxService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, deps: [{ token: i1$1.MatDialog }], target: i0.ɵɵFactoryTarget.Injectable });\nLuxalLightboxService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, providedIn: \"root\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: \"root\",\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.MatDialog }]; } });\n\nclass LuxalLightboxModule {\n}\nLuxalLightboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLuxalLightboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, declarations: [LuxalLightboxComponent], imports: [MatDialogModule, MatButtonModule, MatIconModule, CommonModule], exports: [MatDialogModule,\n        MatButtonModule,\n        MatIconModule,\n        LuxalLightboxComponent] });\nLuxalLightboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, imports: [[MatDialogModule, MatButtonModule, MatIconModule, CommonModule], MatDialogModule,\n        MatButtonModule,\n        MatIconModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [LuxalLightboxComponent],\n                    imports: [MatDialogModule, MatButtonModule, MatIconModule, CommonModule],\n                    exports: [\n                        MatDialogModule,\n                        MatButtonModule,\n                        MatIconModule,\n                        LuxalLightboxComponent,\n                    ],\n                }]\n        }] });\n\n/*\n * Public API Surface of luxal-lightbox\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LuxalLightboxComponent, LuxalLightboxModule, LuxalLightboxService };\n//# sourceMappingURL=luxal-lightbox.mjs.map\n","map":{"version":3,"file":"luxal-lightbox.mjs","sources":["../../../projects/luxal-lightbox/src/lib/luxal-lightbox.component.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.html","../../../projects/luxal-lightbox/src/lib/constant/constant.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.service.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.module.ts","../../../projects/luxal-lightbox/src/public-api.ts","../../../projects/luxal-lightbox/src/luxal-lightbox.ts"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {ImageDto} from \"./model/ImageDto\";\n\n@Component({\n  selector: 'lib-luxal-lightbox',\n  templateUrl: './luxal-lightbox.html',\n  styleUrls: ['./luxal-lightbox.sass'],\n})\nexport class LuxalLightboxComponent implements OnInit {\n  increment = 0;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: ImageDto[]) {\n  }\n\n  ngOnInit(): void {\n    this.addArrowListener();\n  }\n\n\n  addArrowListener(): void {\n    document.addEventListener('keydown', (event) => {\n      switch (event.keyCode) {\n        case 37:\n          this.prev();\n          break;\n        case 39:\n          this.next();\n          break;\n      }\n    });\n  }\n\n  next(): void {\n    if (!(this.increment + 1 >= this.data.length)) {\n      this.increment++;\n    } else {\n      this.increment = 0;\n    }\n  }\n\n  prev(): void {\n    if (this.increment - 1 >= 0) {\n      this.increment--;\n    } else {\n      this.increment = this.data.length - 1;\n    }\n  }\n\n  downloadPhoto(): void {\n    // @ts-ignore\n    document.getElementById('imgLink').click();\n  }\n}\n","<ng-container *ngIf=\"data[increment] && data\">\n  <div class=\"text-right\">\n    <button class=\"float-btn\" mat-dialog-close mat-button>\n      <mat-icon>close</mat-icon>\n    </button>\n    <button class=\"mid-left nav-btn\" mat-button (click)=\"prev()\">\n      <mat-icon>chevron_left</mat-icon>\n    </button>\n    <button class=\"nav-btn mid-right\" (click)=\"next()\" mat-button>\n      <mat-icon>navigate_next</mat-icon>\n    </button>\n    <button (click)=\"downloadPhoto()\" class=\"float-down-btn\" mat-button>\n      <mat-icon>file_download</mat-icon>\n    </button>\n    <a id=\"imgLink\" download=\"imagename.png\" [href]=\"data[increment].uri\"></a>\n  </div>\n  <div\n    class=\"slide\"\n    (swipeleft)=\"prev()\"\n    (swiperight)=\"next()\"\n    [style.background-image]=\"'url(' + data[increment].uri+ ')'\"\n    [ngStyle]=\"data[increment].imageCssProperty\"\n  >\n    <div class=\"row\">\n      <div id=\"btn-col-1\" class=\"col-6 text-left\"></div>\n      <div id=\"btn-col-2\" class=\"col-6 text-right\"></div>\n    </div>\n  </div>\n\n</ng-container>\n","export const LANDSCAPE_ASPECT_RATIO='4/3'\n  export const   LANDSCAPE_ASPECT_RATIO_PERCENTAGE='56.25%'\n  export const PORTRAIT_ASPECT_RATIO='10/16'\n  export const PORTRAIT_ASPECT_RATIO_PERCENTAGE='156.25%'\n","import {Injectable} from \"@angular/core\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {LuxalLightboxComponent} from \"./luxal-lightbox.component\";\nimport {LANDSCAPE_ASPECT_RATIO, PORTRAIT_ASPECT_RATIO,} from \"./constant/constant\";\nimport {ImageDto} from \"./model/ImageDto\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LuxalLightboxService {\n  private listOfImages: ImageDto[] = [];\n\n  constructor(private dialog: MatDialog) {\n  }\n\n  openGallery(data: any[]): void {\n    this.getImageData(data).then(() => {\n      this.dialog\n        .open(LuxalLightboxComponent, {\n          data: this.listOfImages,\n          width: window.screen.width <= 1024 ? \"100%\" : \"auto\",\n        })\n        .afterClosed()\n        .subscribe(() => {\n          this.listOfImages = [];\n        });\n    });\n  }\n\n  async getImageData(medias: any[]): Promise<void> {\n    let counter = 0;\n    while (counter < medias.length) {\n      let img = new Image();\n      img.src = medias[counter].uri;\n      img.onload = () => {\n        medias[counter].width = img.width;\n        medias[counter].height = img.height;\n\n        this.getImageProperties(medias[counter]);\n        counter++;\n      };\n\n      if (medias.indexOf(medias[counter]) === medias.length - 1) {\n        return new Promise<void>((resolve) => resolve());\n      }\n    }\n  }\n\n  getImageProperties(image: any) {\n    if (image.height > image.width) {\n      image.imageCssProperty = {\n        aspectRatio: PORTRAIT_ASPECT_RATIO,\n      };\n    } else if (image.height <= image.width) {\n      image.imageCssProperty = {\n        aspectRatio: LANDSCAPE_ASPECT_RATIO,\n      };\n    }\n    if (window.screen.width >= 700) {\n      image.imageCssProperty[\"height\"] = \"1080px\";\n    }\n    this.listOfImages.push(image);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { LuxalLightboxComponent } from './luxal-lightbox.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [LuxalLightboxComponent],\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, CommonModule],\n  exports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    LuxalLightboxComponent,\n  ],\n})\nexport class LuxalLightboxModule {}\n","/*\n * Public API Surface of luxal-lightbox\n */\n\nexport * from './lib/luxal-lightbox.service';\nexport * from './lib/luxal-lightbox.component';\nexport * from './lib/luxal-lightbox.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import { __awaiter } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, Inject, Injectable, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport * as i1 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i2 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass LuxalLightboxComponent {\n    constructor(data) {\n        this.data = data;\n        this.increment = 0;\n    }\n    ngOnInit() {\n        this.addArrowListener();\n    }\n    addArrowListener() {\n        document.addEventListener('keydown', (event) => {\n            switch (event.keyCode) {\n                case 37:\n                    this.prev();\n                    break;\n                case 39:\n                    this.next();\n                    break;\n            }\n        });\n    }\n    next() {\n        if (!(this.increment + 1 >= this.data.length)) {\n            this.increment++;\n        }\n        else {\n            this.increment = 0;\n        }\n    }\n    prev() {\n        if (this.increment - 1 >= 0) {\n            this.increment--;\n        }\n        else {\n            this.increment = this.data.length - 1;\n        }\n    }\n    downloadPhoto() {\n        // @ts-ignore\n        document.getElementById('imgLink').click();\n    }\n}\nLuxalLightboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxComponent, deps: [{ token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component });\nLuxalLightboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: LuxalLightboxComponent, selector: \"lib-luxal-lightbox\", ngImport: i0, template: \"<ng-container *ngIf=\\\"data[increment] && data\\\">\\n  <div class=\\\"text-right\\\">\\n    <button class=\\\"float-btn\\\" mat-dialog-close mat-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n    <button class=\\\"mid-left nav-btn\\\" mat-button (click)=\\\"prev()\\\">\\n      <mat-icon>chevron_left</mat-icon>\\n    </button>\\n    <button class=\\\"nav-btn mid-right\\\" (click)=\\\"next()\\\" mat-button>\\n      <mat-icon>navigate_next</mat-icon>\\n    </button>\\n    <button (click)=\\\"downloadPhoto()\\\" class=\\\"float-down-btn\\\" mat-button>\\n      <mat-icon>file_download</mat-icon>\\n    </button>\\n    <a id=\\\"imgLink\\\" download=\\\"imagename.png\\\" [href]=\\\"data[increment].uri\\\"></a>\\n  </div>\\n  <div\\n    class=\\\"slide\\\"\\n    (swipeleft)=\\\"prev()\\\"\\n    (swiperight)=\\\"next()\\\"\\n    [style.background-image]=\\\"'url(' + data[increment].uri+ ')'\\\"\\n    [ngStyle]=\\\"data[increment].imageCssProperty\\\"\\n  >\\n    <div class=\\\"row\\\">\\n      <div id=\\\"btn-col-1\\\" class=\\\"col-6 text-left\\\"></div>\\n      <div id=\\\"btn-col-2\\\" class=\\\"col-6 text-right\\\"></div>\\n    </div>\\n  </div>\\n\\n</ng-container>\\n\", styles: [\"::ng-deep .mat-dialog-container{padding:0!important}.slide{background-size:cover;overflow:hidden;max-width:100%;background-position:center}.nav-btn{background-color:transparent;color:#fff}.float-btn{margin-top:30px;color:#fff;margin-right:30px;position:absolute;top:0;right:0}.mid-left{top:50%;left:1rem;transform:translateY(-50%);position:absolute}.mid-right{top:50%;right:2rem;transform:translateY(-50%);position:absolute}.float-down-btn{position:fixed;bottom:4rem;z-index:3;right:2rem;background-color:transparent;color:#fff}.slide{zoom:.8}.slide{zoom:.7}.slide{zoom:.6}\\n\"], components: [{ type: i1.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: [\"aria-label\", \"type\", \"mat-dialog-close\", \"matDialogClose\"], exportAs: [\"matDialogClose\"] }, { type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-luxal-lightbox', template: \"<ng-container *ngIf=\\\"data[increment] && data\\\">\\n  <div class=\\\"text-right\\\">\\n    <button class=\\\"float-btn\\\" mat-dialog-close mat-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n    <button class=\\\"mid-left nav-btn\\\" mat-button (click)=\\\"prev()\\\">\\n      <mat-icon>chevron_left</mat-icon>\\n    </button>\\n    <button class=\\\"nav-btn mid-right\\\" (click)=\\\"next()\\\" mat-button>\\n      <mat-icon>navigate_next</mat-icon>\\n    </button>\\n    <button (click)=\\\"downloadPhoto()\\\" class=\\\"float-down-btn\\\" mat-button>\\n      <mat-icon>file_download</mat-icon>\\n    </button>\\n    <a id=\\\"imgLink\\\" download=\\\"imagename.png\\\" [href]=\\\"data[increment].uri\\\"></a>\\n  </div>\\n  <div\\n    class=\\\"slide\\\"\\n    (swipeleft)=\\\"prev()\\\"\\n    (swiperight)=\\\"next()\\\"\\n    [style.background-image]=\\\"'url(' + data[increment].uri+ ')'\\\"\\n    [ngStyle]=\\\"data[increment].imageCssProperty\\\"\\n  >\\n    <div class=\\\"row\\\">\\n      <div id=\\\"btn-col-1\\\" class=\\\"col-6 text-left\\\"></div>\\n      <div id=\\\"btn-col-2\\\" class=\\\"col-6 text-right\\\"></div>\\n    </div>\\n  </div>\\n\\n</ng-container>\\n\", styles: [\"::ng-deep .mat-dialog-container{padding:0!important}.slide{background-size:cover;overflow:hidden;max-width:100%;background-position:center}.nav-btn{background-color:transparent;color:#fff}.float-btn{margin-top:30px;color:#fff;margin-right:30px;position:absolute;top:0;right:0}.mid-left{top:50%;left:1rem;transform:translateY(-50%);position:absolute}.mid-right{top:50%;right:2rem;transform:translateY(-50%);position:absolute}.float-down-btn{position:fixed;bottom:4rem;z-index:3;right:2rem;background-color:transparent;color:#fff}.slide{zoom:.8}.slide{zoom:.7}.slide{zoom:.6}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DIALOG_DATA]\n                    }] }];\n    } });\n\nconst LANDSCAPE_ASPECT_RATIO = '4/3';\nconst LANDSCAPE_ASPECT_RATIO_PERCENTAGE = '56.25%';\nconst PORTRAIT_ASPECT_RATIO = '10/16';\nconst PORTRAIT_ASPECT_RATIO_PERCENTAGE = '156.25%';\n\nclass LuxalLightboxService {\n    constructor(dialog) {\n        this.dialog = dialog;\n        this.listOfImages = [];\n    }\n    openGallery(data) {\n        this.getImageData(data).then(() => {\n            this.dialog\n                .open(LuxalLightboxComponent, {\n                data: this.listOfImages,\n                width: window.screen.width <= 1024 ? \"100%\" : \"auto\",\n            })\n                .afterClosed()\n                .subscribe(() => {\n                this.listOfImages = [];\n            });\n        });\n    }\n    getImageData(medias) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let counter = 0;\n            while (counter < medias.length) {\n                let img = new Image();\n                img.src = medias[counter].uri;\n                img.onload = () => {\n                    medias[counter].width = img.width;\n                    medias[counter].height = img.height;\n                    this.getImageProperties(medias[counter]);\n                    counter++;\n                };\n                if (medias.indexOf(medias[counter]) === medias.length - 1) {\n                    return new Promise((resolve) => resolve());\n                }\n            }\n        });\n    }\n    getImageProperties(image) {\n        if (image.height > image.width) {\n            image.imageCssProperty = {\n                aspectRatio: PORTRAIT_ASPECT_RATIO,\n            };\n        }\n        else if (image.height <= image.width) {\n            image.imageCssProperty = {\n                aspectRatio: LANDSCAPE_ASPECT_RATIO,\n            };\n        }\n        if (window.screen.width >= 700) {\n            image.imageCssProperty[\"height\"] = \"1080px\";\n        }\n        this.listOfImages.push(image);\n    }\n}\nLuxalLightboxService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, deps: [{ token: i1$1.MatDialog }], target: i0.ɵɵFactoryTarget.Injectable });\nLuxalLightboxService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, providedIn: \"root\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: \"root\",\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.MatDialog }]; } });\n\nclass LuxalLightboxModule {\n}\nLuxalLightboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLuxalLightboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, declarations: [LuxalLightboxComponent], imports: [MatDialogModule, MatButtonModule, MatIconModule, CommonModule], exports: [MatDialogModule,\n        MatButtonModule,\n        MatIconModule,\n        LuxalLightboxComponent] });\nLuxalLightboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, imports: [[MatDialogModule, MatButtonModule, MatIconModule, CommonModule], MatDialogModule,\n        MatButtonModule,\n        MatIconModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [LuxalLightboxComponent],\n                    imports: [MatDialogModule, MatButtonModule, MatIconModule, CommonModule],\n                    exports: [\n                        MatDialogModule,\n                        MatButtonModule,\n                        MatIconModule,\n                        LuxalLightboxComponent,\n                    ],\n                }]\n        }] });\n\n/*\n * Public API Surface of luxal-lightbox\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LuxalLightboxComponent, LuxalLightboxModule, LuxalLightboxService };\n//# sourceMappingURL=luxal-lightbox.mjs.map\n","map":{"version":3,"file":"luxal-lightbox.mjs","sources":["../../../projects/luxal-lightbox/src/lib/luxal-lightbox.component.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.html","../../../projects/luxal-lightbox/src/lib/constant/constant.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.service.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.module.ts","../../../projects/luxal-lightbox/src/public-api.ts","../../../projects/luxal-lightbox/src/luxal-lightbox.ts"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {ImageDto} from \"./model/ImageDto\";\n\n@Component({\n  selector: 'lib-luxal-lightbox',\n  templateUrl: './luxal-lightbox.html',\n  styleUrls: ['./luxal-lightbox.sass'],\n})\nexport class LuxalLightboxComponent implements OnInit {\n  increment = 0;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: ImageDto[]) {\n  }\n\n  ngOnInit(): void {\n    this.addArrowListener();\n  }\n\n\n  addArrowListener(): void {\n    document.addEventListener('keydown', (event) => {\n      switch (event.keyCode) {\n        case 37:\n          this.prev();\n          break;\n        case 39:\n          this.next();\n          break;\n      }\n    });\n  }\n\n  next(): void {\n    if (!(this.increment + 1 >= this.data.length)) {\n      this.increment++;\n    } else {\n      this.increment = 0;\n    }\n  }\n\n  prev(): void {\n    if (this.increment - 1 >= 0) {\n      this.increment--;\n    } else {\n      this.increment = this.data.length - 1;\n    }\n  }\n\n  downloadPhoto(): void {\n    // @ts-ignore\n    document.getElementById('imgLink').click();\n  }\n}\n","<ng-container *ngIf=\"data[increment] && data\">\n  <div class=\"text-right\">\n    <button class=\"float-btn\" mat-dialog-close mat-button>\n      <mat-icon>close</mat-icon>\n    </button>\n    <button class=\"mid-left nav-btn\" mat-button (click)=\"prev()\">\n      <mat-icon>chevron_left</mat-icon>\n    </button>\n    <button class=\"nav-btn mid-right\" (click)=\"next()\" mat-button>\n      <mat-icon>navigate_next</mat-icon>\n    </button>\n    <button (click)=\"downloadPhoto()\" class=\"float-down-btn\" mat-button>\n      <mat-icon>file_download</mat-icon>\n    </button>\n    <a id=\"imgLink\" download=\"imagename.png\" [href]=\"data[increment].uri\"></a>\n  </div>\n  <div\n    class=\"slide\"\n    (swipeleft)=\"prev()\"\n    (swiperight)=\"next()\"\n    [style.background-image]=\"'url(' + data[increment].uri+ ')'\"\n    [ngStyle]=\"data[increment].imageCssProperty\"\n  >\n    <div class=\"row\">\n      <div id=\"btn-col-1\" class=\"col-6 text-left\"></div>\n      <div id=\"btn-col-2\" class=\"col-6 text-right\"></div>\n    </div>\n  </div>\n\n</ng-container>\n","export const LANDSCAPE_ASPECT_RATIO='4/3'\n  export const   LANDSCAPE_ASPECT_RATIO_PERCENTAGE='56.25%'\n  export const PORTRAIT_ASPECT_RATIO='10/16'\n  export const PORTRAIT_ASPECT_RATIO_PERCENTAGE='156.25%'\n","import {Injectable} from \"@angular/core\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {LuxalLightboxComponent} from \"./luxal-lightbox.component\";\nimport {LANDSCAPE_ASPECT_RATIO, PORTRAIT_ASPECT_RATIO,} from \"./constant/constant\";\nimport {ImageDto} from \"./model/ImageDto\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LuxalLightboxService {\n  private listOfImages: ImageDto[] = [];\n\n  constructor(private dialog: MatDialog) {\n  }\n\n  openGallery(data: any[]): void {\n    this.getImageData(data).then(() => {\n      this.dialog\n        .open(LuxalLightboxComponent, {\n          data: this.listOfImages,\n          width: window.screen.width <= 1024 ? \"100%\" : \"auto\",\n        })\n        .afterClosed()\n        .subscribe(() => {\n          this.listOfImages = [];\n        });\n    });\n  }\n\n  async getImageData(medias: any[]): Promise<void> {\n    let counter = 0;\n    while (counter < medias.length) {\n      let img = new Image();\n      img.src = medias[counter].uri;\n      img.onload = () => {\n        medias[counter].width = img.width;\n        medias[counter].height = img.height;\n\n        this.getImageProperties(medias[counter]);\n        counter++;\n      };\n\n      if (medias.indexOf(medias[counter]) === medias.length - 1) {\n        return new Promise<void>((resolve) => resolve());\n      }\n    }\n  }\n\n  getImageProperties(image: any) {\n    if (image.height > image.width) {\n      image.imageCssProperty = {\n        aspectRatio: PORTRAIT_ASPECT_RATIO,\n      };\n    } else if (image.height <= image.width) {\n      image.imageCssProperty = {\n        aspectRatio: LANDSCAPE_ASPECT_RATIO,\n      };\n    }\n    if (window.screen.width >= 700) {\n      image.imageCssProperty[\"height\"] = \"1080px\";\n    }\n    this.listOfImages.push(image);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { LuxalLightboxComponent } from './luxal-lightbox.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [LuxalLightboxComponent],\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, CommonModule],\n  exports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    LuxalLightboxComponent,\n  ],\n})\nexport class LuxalLightboxModule {}\n","/*\n * Public API Surface of luxal-lightbox\n */\n\nexport * from './lib/luxal-lightbox.service';\nexport * from './lib/luxal-lightbox.component';\nexport * from './lib/luxal-lightbox.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}