{"hash":"f16c6131218d07a6ab0cb91ebfc2ee6a4ef430eb","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Component, Inject, Injectable, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport * as i1 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i2 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\n\nclass LuxalLightboxComponent {\n    constructor(medias) {\n        this.medias = medias;\n        this.increment = 0;\n        this.slide = document.getElementById(\"slide\");\n        this.isMobile = false;\n    }\n    ngOnInit() {\n        this.getMeta(this.medias[0].uri);\n        this.addArrowListener();\n    }\n    addArrowListener() {\n        document.addEventListener('keydown', (event) => {\n            switch (event.keyCode) {\n                case 37:\n                    this.prev();\n                    break;\n                case 39:\n                    this.next();\n                    break;\n            }\n        });\n    }\n    next() {\n        if (!(this.increment + 1 >= this.medias.length)) {\n            this.increment++;\n        }\n        else {\n            this.increment = 0;\n        }\n        this.getMeta();\n    }\n    prev() {\n        if (this.increment - 1 >= 0) {\n            this.increment--;\n        }\n        else {\n            this.increment = this.medias.length - 1;\n        }\n        this.getMeta();\n    }\n    getMeta(url) {\n        const img = new Image();\n        if (url) {\n            img.src = url;\n        }\n        else {\n            img.src = this.medias[this.increment].uri;\n        }\n        this.setResponsiveImage(img);\n    }\n    setResponsiveImage(img) {\n        this.setDesktopAspectRatio(img);\n    }\n    setMobileAspectRatio(img) {\n        if (img.width < img.height) {\n            // @ts-ignore\n            this.slide.style.paddingTop = '156.25%';\n        }\n        else {\n            // @ts-ignore\n            this.slide.style.paddingTop = '56.25%';\n            // @ts-ignore\n            this.slide.style.height = `${window.screen.width + 50}px`;\n        }\n    }\n    setDesktopAspectRatio(img) {\n        if (img.width < img.height) {\n            // @ts-ignore\n            this.slide.style.aspectRatio = '9/16';\n            // @ts-ignore\n            // @ts-ignore\n            this.slide.style.removeProperty('width');\n        }\n        else {\n            // @ts-ignore\n            this.slide.style.width = `${window.screen.width}px`;\n            // @ts-ignore\n            this.slide.style.aspectRatio = '4/3';\n            // @ts-ignore\n            this.slide.style.removeProperty('height');\n        }\n    }\n    downloadPhoto() {\n        // @ts-ignore\n        document.getElementById('imgLink').click();\n    }\n}\nLuxalLightboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxComponent, deps: [{ token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component });\nLuxalLightboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: LuxalLightboxComponent, selector: \"lib-luxal-lightbox\", ngImport: i0, template: \"<div class=\\\"text-right\\\">\\n  <button class=\\\"float-btn\\\" mat-dialog-close mat-button>\\n    <mat-icon>close</mat-icon>\\n  </button>\\n  <button class=\\\"mid-left nav-btn\\\" mat-button (click)=\\\"prev()\\\">\\n    <mat-icon>chevron_left</mat-icon>\\n  </button>\\n  <button class=\\\"nav-btn mid-right\\\" (click)=\\\"next()\\\" mat-button>\\n    <mat-icon>navigate_next</mat-icon>\\n  </button>\\n  <button (click)=\\\"downloadPhoto()\\\" class=\\\"float-down-btn\\\" mat-button>\\n    <mat-icon>file_download</mat-icon>\\n  </button>\\n  <a id=\\\"imgLink\\\" download=\\\"imagename.png\\\" [href]=\\\"medias[increment].uri\\\"></a>\\n</div>\\n<div class=\\\"slide\\\" (swipeleft)=\\\"prev()\\\" (swiperight)=\\\"next()\\\" id=\\\"slide\\\"\\n     [style.background-image]=\\\"'url(' + medias[increment].uri+ ')'\\\">\\n  <div class=\\\"row\\\">\\n    <h1>Marko</h1>\\n    <div id=\\\"btn-col-1\\\" class=\\\"col-6 text-left\\\">\\n    </div>\\n    <div id=\\\"btn-col-2\\\" class=\\\"col-6 text-right\\\">\\n    </div>\\n  </div>\\n</div>\\n\\n\", styles: [\"::ng-deep .mat-dialog-container{padding:0!important}.slide{background-size:cover;overflow:hidden;max-width:100%;background-position:center}.nav-btn{background-color:transparent;color:#fff}.float-btn{margin-top:30px;color:#fff;margin-right:30px;position:absolute;top:0;right:0}.mid-left{top:50%;left:1rem;transform:translateY(-50%);position:absolute}.mid-right{top:50%;right:2rem;transform:translateY(-50%);position:absolute}.float-down-btn{position:fixed;bottom:4rem;z-index:3;right:2rem;background-color:transparent;color:#fff}@media screen and (max-width: 570px){.nav-btn{display:none}}.slide{zoom:.8}.slide{zoom:.7}.slide{zoom:.6}\\n\"], components: [{ type: i1.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i1$1.MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: [\"aria-label\", \"type\", \"mat-dialog-close\", \"matDialogClose\"], exportAs: [\"matDialogClose\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-luxal-lightbox', template: \"<div class=\\\"text-right\\\">\\n  <button class=\\\"float-btn\\\" mat-dialog-close mat-button>\\n    <mat-icon>close</mat-icon>\\n  </button>\\n  <button class=\\\"mid-left nav-btn\\\" mat-button (click)=\\\"prev()\\\">\\n    <mat-icon>chevron_left</mat-icon>\\n  </button>\\n  <button class=\\\"nav-btn mid-right\\\" (click)=\\\"next()\\\" mat-button>\\n    <mat-icon>navigate_next</mat-icon>\\n  </button>\\n  <button (click)=\\\"downloadPhoto()\\\" class=\\\"float-down-btn\\\" mat-button>\\n    <mat-icon>file_download</mat-icon>\\n  </button>\\n  <a id=\\\"imgLink\\\" download=\\\"imagename.png\\\" [href]=\\\"medias[increment].uri\\\"></a>\\n</div>\\n<div class=\\\"slide\\\" (swipeleft)=\\\"prev()\\\" (swiperight)=\\\"next()\\\" id=\\\"slide\\\"\\n     [style.background-image]=\\\"'url(' + medias[increment].uri+ ')'\\\">\\n  <div class=\\\"row\\\">\\n    <h1>Marko</h1>\\n    <div id=\\\"btn-col-1\\\" class=\\\"col-6 text-left\\\">\\n    </div>\\n    <div id=\\\"btn-col-2\\\" class=\\\"col-6 text-right\\\">\\n    </div>\\n  </div>\\n</div>\\n\\n\", styles: [\"::ng-deep .mat-dialog-container{padding:0!important}.slide{background-size:cover;overflow:hidden;max-width:100%;background-position:center}.nav-btn{background-color:transparent;color:#fff}.float-btn{margin-top:30px;color:#fff;margin-right:30px;position:absolute;top:0;right:0}.mid-left{top:50%;left:1rem;transform:translateY(-50%);position:absolute}.mid-right{top:50%;right:2rem;transform:translateY(-50%);position:absolute}.float-down-btn{position:fixed;bottom:4rem;z-index:3;right:2rem;background-color:transparent;color:#fff}@media screen and (max-width: 570px){.nav-btn{display:none}}.slide{zoom:.8}.slide{zoom:.7}.slide{zoom:.6}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DIALOG_DATA]\n                }] }]; } });\n\nclass LuxalLightboxService {\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    openGallery(data) {\n        this.dialog.open(LuxalLightboxComponent, {\n            data,\n            width: window.screen.width <= 1024 ? '100%' : 'auto',\n            maxWidth: window.screen.width <= 1024 ? '100vw' : 'auto',\n        });\n    }\n}\nLuxalLightboxService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, deps: [{ token: i1$1.MatDialog }], target: i0.ɵɵFactoryTarget.Injectable });\nLuxalLightboxService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.MatDialog }]; } });\n\nclass LuxalLightboxModule {\n}\nLuxalLightboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLuxalLightboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, declarations: [LuxalLightboxComponent], imports: [MatDialogModule,\n        MatButtonModule,\n        MatIconModule], exports: [MatDialogModule,\n        MatButtonModule,\n        MatIconModule,\n        LuxalLightboxComponent] });\nLuxalLightboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, imports: [[\n            MatDialogModule,\n            MatButtonModule,\n            MatIconModule,\n        ], MatDialogModule,\n        MatButtonModule,\n        MatIconModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        LuxalLightboxComponent\n                    ],\n                    imports: [\n                        MatDialogModule,\n                        MatButtonModule,\n                        MatIconModule,\n                    ],\n                    exports: [\n                        MatDialogModule,\n                        MatButtonModule,\n                        MatIconModule,\n                        LuxalLightboxComponent,\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of luxal-lightbox\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LuxalLightboxComponent, LuxalLightboxModule, LuxalLightboxService };\n//# sourceMappingURL=luxal-lightbox.mjs.map\n","map":{"version":3,"file":"luxal-lightbox.mjs","sources":["../../../projects/luxal-lightbox/src/lib/luxal-lightbox.component.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.html","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.service.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.module.ts","../../../projects/luxal-lightbox/src/public-api.ts","../../../projects/luxal-lightbox/src/luxal-lightbox.ts"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'lib-luxal-lightbox',\n  templateUrl: './luxal-lightbox.html',\n  styleUrls: ['./luxal-lightbox.sass']\n})\nexport class LuxalLightboxComponent implements OnInit {\n\n  increment = 0;\n  slide = document.getElementById(\"slide\")\n  isMobile = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public medias: any[]) {\n  }\n\n  ngOnInit(): void {\n    this.getMeta(this.medias[0].uri);\n    this.addArrowListener();\n  }\n\n  addArrowListener(): void {\n    document.addEventListener('keydown', (event) => {\n      switch (event.keyCode) {\n        case 37:\n          this.prev();\n          break;\n        case 39:\n          this.next();\n          break;\n      }\n    });\n  }\n\n  next(): void {\n    if (!(this.increment + 1 >= this.medias.length)) {\n      this.increment++;\n    } else {\n      this.increment = 0;\n    }\n    this.getMeta();\n  }\n\n\n  prev(): void {\n    if (this.increment - 1 >= 0) {\n      this.increment--;\n    } else {\n      this.increment = this.medias.length - 1;\n    }\n    this.getMeta();\n  }\n\n  getMeta(url?: string): void {\n    const img = new Image();\n    if (url) {\n      img.src = url;\n    } else {\n      img.src = this.medias[this.increment].uri;\n    }\n    this.setResponsiveImage(img);\n  }\n\n  setResponsiveImage(img: any): void {\n    this.setDesktopAspectRatio(img);\n  }\n\n  setMobileAspectRatio(img: any): void {\n    if (img.width < img.height) {\n      // @ts-ignore\n      this.slide.style.paddingTop = '156.25%';\n    } else {\n      // @ts-ignore\n      this.slide.style.paddingTop = '56.25%';\n      // @ts-ignore\n      this.slide.style.height = `${window.screen.width + 50}px`;\n    }\n  }\n\n  setDesktopAspectRatio(img: any,): void {\n    if (img.width < img.height) {\n      // @ts-ignore\n      this.slide.style.aspectRatio = '9/16';\n      // @ts-ignore\n\n      // @ts-ignore\n      this.slide.style.removeProperty('width');\n    } else {\n      // @ts-ignore\n      this.slide.style.width = `${window.screen.width}px`;\n      // @ts-ignore\n      this.slide.style.aspectRatio = '4/3';\n      // @ts-ignore\n      this.slide.style.removeProperty('height');\n    }\n  }\n\n  downloadPhoto(): void {\n    // @ts-ignore\n    document.getElementById('imgLink').click();\n  }\n}\n","<div class=\"text-right\">\n  <button class=\"float-btn\" mat-dialog-close mat-button>\n    <mat-icon>close</mat-icon>\n  </button>\n  <button class=\"mid-left nav-btn\" mat-button (click)=\"prev()\">\n    <mat-icon>chevron_left</mat-icon>\n  </button>\n  <button class=\"nav-btn mid-right\" (click)=\"next()\" mat-button>\n    <mat-icon>navigate_next</mat-icon>\n  </button>\n  <button (click)=\"downloadPhoto()\" class=\"float-down-btn\" mat-button>\n    <mat-icon>file_download</mat-icon>\n  </button>\n  <a id=\"imgLink\" download=\"imagename.png\" [href]=\"medias[increment].uri\"></a>\n</div>\n<div class=\"slide\" (swipeleft)=\"prev()\" (swiperight)=\"next()\" id=\"slide\"\n     [style.background-image]=\"'url(' + medias[increment].uri+ ')'\">\n  <div class=\"row\">\n    <h1>Marko</h1>\n    <div id=\"btn-col-1\" class=\"col-6 text-left\">\n    </div>\n    <div id=\"btn-col-2\" class=\"col-6 text-right\">\n    </div>\n  </div>\n</div>\n\n","import {Injectable} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LuxalLightboxComponent} from './luxal-lightbox.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LuxalLightboxService {\n\n  constructor(private dialog: MatDialog) { }\n\n  openGallery(data: any[]): void {\n    this.dialog.open(LuxalLightboxComponent, {\n      data,\n      width: window.screen.width <= 1024 ? '100%' : 'auto',\n      maxWidth: window.screen.width <= 1024 ? '100vw' : 'auto',\n    });\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport {LuxalLightboxComponent} from './luxal-lightbox.component';\n\n@NgModule({\n  declarations: [\n    LuxalLightboxComponent\n  ],\n  imports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n  ],\n  exports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    LuxalLightboxComponent,\n  ]\n})\nexport class LuxalLightboxModule {}\n","/*\n * Public API Surface of luxal-lightbox\n */\n\nexport * from './lib/luxal-lightbox.service';\nexport * from './lib/luxal-lightbox.component';\nexport * from './lib/luxal-lightbox.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Component, Inject, Injectable, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport * as i1 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i2 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\n\nclass LuxalLightboxComponent {\n    constructor(medias) {\n        this.medias = medias;\n        this.increment = 0;\n        this.slide = document.getElementById(\"slide\");\n        this.isMobile = false;\n    }\n    ngOnInit() {\n        this.getMeta(this.medias[0].uri);\n        this.addArrowListener();\n    }\n    addArrowListener() {\n        document.addEventListener('keydown', (event) => {\n            switch (event.keyCode) {\n                case 37:\n                    this.prev();\n                    break;\n                case 39:\n                    this.next();\n                    break;\n            }\n        });\n    }\n    next() {\n        if (!(this.increment + 1 >= this.medias.length)) {\n            this.increment++;\n        }\n        else {\n            this.increment = 0;\n        }\n        this.getMeta();\n    }\n    prev() {\n        if (this.increment - 1 >= 0) {\n            this.increment--;\n        }\n        else {\n            this.increment = this.medias.length - 1;\n        }\n        this.getMeta();\n    }\n    getMeta(url) {\n        const img = new Image();\n        if (url) {\n            img.src = url;\n        }\n        else {\n            img.src = this.medias[this.increment].uri;\n        }\n        this.setResponsiveImage(img);\n    }\n    setResponsiveImage(img) {\n        this.setDesktopAspectRatio(img);\n    }\n    setMobileAspectRatio(img) {\n        if (img.width < img.height) {\n            // @ts-ignore\n            this.slide.style.paddingTop = '156.25%';\n        }\n        else {\n            // @ts-ignore\n            this.slide.style.paddingTop = '56.25%';\n            // @ts-ignore\n            this.slide.style.height = `${window.screen.width + 50}px`;\n        }\n    }\n    setDesktopAspectRatio(img) {\n        if (img.width < img.height) {\n            // @ts-ignore\n            this.slide.style.aspectRatio = '9/16';\n            // @ts-ignore\n            // @ts-ignore\n            this.slide.style.removeProperty('width');\n        }\n        else {\n            // @ts-ignore\n            this.slide.style.width = `${window.screen.width}px`;\n            // @ts-ignore\n            this.slide.style.aspectRatio = '4/3';\n            // @ts-ignore\n            this.slide.style.removeProperty('height');\n        }\n    }\n    downloadPhoto() {\n        // @ts-ignore\n        document.getElementById('imgLink').click();\n    }\n}\nLuxalLightboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxComponent, deps: [{ token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component });\nLuxalLightboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: LuxalLightboxComponent, selector: \"lib-luxal-lightbox\", ngImport: i0, template: \"<div class=\\\"text-right\\\">\\n  <button class=\\\"float-btn\\\" mat-dialog-close mat-button>\\n    <mat-icon>close</mat-icon>\\n  </button>\\n  <button class=\\\"mid-left nav-btn\\\" mat-button (click)=\\\"prev()\\\">\\n    <mat-icon>chevron_left</mat-icon>\\n  </button>\\n  <button class=\\\"nav-btn mid-right\\\" (click)=\\\"next()\\\" mat-button>\\n    <mat-icon>navigate_next</mat-icon>\\n  </button>\\n  <button (click)=\\\"downloadPhoto()\\\" class=\\\"float-down-btn\\\" mat-button>\\n    <mat-icon>file_download</mat-icon>\\n  </button>\\n  <a id=\\\"imgLink\\\" download=\\\"imagename.png\\\" [href]=\\\"medias[increment].uri\\\"></a>\\n</div>\\n<div class=\\\"slide\\\" (swipeleft)=\\\"prev()\\\" (swiperight)=\\\"next()\\\" id=\\\"slide\\\"\\n     [style.background-image]=\\\"'url(' + medias[increment].uri+ ')'\\\">\\n  <div class=\\\"row\\\">\\n    <h1>Marko</h1>\\n    <div id=\\\"btn-col-1\\\" class=\\\"col-6 text-left\\\">\\n    </div>\\n    <div id=\\\"btn-col-2\\\" class=\\\"col-6 text-right\\\">\\n    </div>\\n  </div>\\n</div>\\n\\n\", styles: [\"::ng-deep .mat-dialog-container{padding:0!important}.slide{background-size:cover;overflow:hidden;max-width:100%;background-position:center}.nav-btn{background-color:transparent;color:#fff}.float-btn{margin-top:30px;color:#fff;margin-right:30px;position:absolute;top:0;right:0}.mid-left{top:50%;left:1rem;transform:translateY(-50%);position:absolute}.mid-right{top:50%;right:2rem;transform:translateY(-50%);position:absolute}.float-down-btn{position:fixed;bottom:4rem;z-index:3;right:2rem;background-color:transparent;color:#fff}@media screen and (max-width: 570px){.nav-btn{display:none}}.slide{zoom:.8}.slide{zoom:.7}.slide{zoom:.6}\\n\"], components: [{ type: i1.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i1$1.MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: [\"aria-label\", \"type\", \"mat-dialog-close\", \"matDialogClose\"], exportAs: [\"matDialogClose\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-luxal-lightbox', template: \"<div class=\\\"text-right\\\">\\n  <button class=\\\"float-btn\\\" mat-dialog-close mat-button>\\n    <mat-icon>close</mat-icon>\\n  </button>\\n  <button class=\\\"mid-left nav-btn\\\" mat-button (click)=\\\"prev()\\\">\\n    <mat-icon>chevron_left</mat-icon>\\n  </button>\\n  <button class=\\\"nav-btn mid-right\\\" (click)=\\\"next()\\\" mat-button>\\n    <mat-icon>navigate_next</mat-icon>\\n  </button>\\n  <button (click)=\\\"downloadPhoto()\\\" class=\\\"float-down-btn\\\" mat-button>\\n    <mat-icon>file_download</mat-icon>\\n  </button>\\n  <a id=\\\"imgLink\\\" download=\\\"imagename.png\\\" [href]=\\\"medias[increment].uri\\\"></a>\\n</div>\\n<div class=\\\"slide\\\" (swipeleft)=\\\"prev()\\\" (swiperight)=\\\"next()\\\" id=\\\"slide\\\"\\n     [style.background-image]=\\\"'url(' + medias[increment].uri+ ')'\\\">\\n  <div class=\\\"row\\\">\\n    <h1>Marko</h1>\\n    <div id=\\\"btn-col-1\\\" class=\\\"col-6 text-left\\\">\\n    </div>\\n    <div id=\\\"btn-col-2\\\" class=\\\"col-6 text-right\\\">\\n    </div>\\n  </div>\\n</div>\\n\\n\", styles: [\"::ng-deep .mat-dialog-container{padding:0!important}.slide{background-size:cover;overflow:hidden;max-width:100%;background-position:center}.nav-btn{background-color:transparent;color:#fff}.float-btn{margin-top:30px;color:#fff;margin-right:30px;position:absolute;top:0;right:0}.mid-left{top:50%;left:1rem;transform:translateY(-50%);position:absolute}.mid-right{top:50%;right:2rem;transform:translateY(-50%);position:absolute}.float-down-btn{position:fixed;bottom:4rem;z-index:3;right:2rem;background-color:transparent;color:#fff}@media screen and (max-width: 570px){.nav-btn{display:none}}.slide{zoom:.8}.slide{zoom:.7}.slide{zoom:.6}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DIALOG_DATA]\n                    }] }];\n    } });\n\nclass LuxalLightboxService {\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    openGallery(data) {\n        this.dialog.open(LuxalLightboxComponent, {\n            data,\n            width: window.screen.width <= 1024 ? '100%' : 'auto',\n            maxWidth: window.screen.width <= 1024 ? '100vw' : 'auto',\n        });\n    }\n}\nLuxalLightboxService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, deps: [{ token: i1$1.MatDialog }], target: i0.ɵɵFactoryTarget.Injectable });\nLuxalLightboxService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.MatDialog }]; } });\n\nclass LuxalLightboxModule {\n}\nLuxalLightboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLuxalLightboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, declarations: [LuxalLightboxComponent], imports: [MatDialogModule,\n        MatButtonModule,\n        MatIconModule], exports: [MatDialogModule,\n        MatButtonModule,\n        MatIconModule,\n        LuxalLightboxComponent] });\nLuxalLightboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, imports: [[\n            MatDialogModule,\n            MatButtonModule,\n            MatIconModule,\n        ], MatDialogModule,\n        MatButtonModule,\n        MatIconModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        LuxalLightboxComponent\n                    ],\n                    imports: [\n                        MatDialogModule,\n                        MatButtonModule,\n                        MatIconModule,\n                    ],\n                    exports: [\n                        MatDialogModule,\n                        MatButtonModule,\n                        MatIconModule,\n                        LuxalLightboxComponent,\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of luxal-lightbox\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LuxalLightboxComponent, LuxalLightboxModule, LuxalLightboxService };\n//# sourceMappingURL=luxal-lightbox.mjs.map\n","map":{"version":3,"file":"luxal-lightbox.mjs","sources":["../../../projects/luxal-lightbox/src/lib/luxal-lightbox.component.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.html","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.service.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.module.ts","../../../projects/luxal-lightbox/src/public-api.ts","../../../projects/luxal-lightbox/src/luxal-lightbox.ts"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'lib-luxal-lightbox',\n  templateUrl: './luxal-lightbox.html',\n  styleUrls: ['./luxal-lightbox.sass']\n})\nexport class LuxalLightboxComponent implements OnInit {\n\n  increment = 0;\n  slide = document.getElementById(\"slide\")\n  isMobile = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public medias: any[]) {\n  }\n\n  ngOnInit(): void {\n    this.getMeta(this.medias[0].uri);\n    this.addArrowListener();\n  }\n\n  addArrowListener(): void {\n    document.addEventListener('keydown', (event) => {\n      switch (event.keyCode) {\n        case 37:\n          this.prev();\n          break;\n        case 39:\n          this.next();\n          break;\n      }\n    });\n  }\n\n  next(): void {\n    if (!(this.increment + 1 >= this.medias.length)) {\n      this.increment++;\n    } else {\n      this.increment = 0;\n    }\n    this.getMeta();\n  }\n\n\n  prev(): void {\n    if (this.increment - 1 >= 0) {\n      this.increment--;\n    } else {\n      this.increment = this.medias.length - 1;\n    }\n    this.getMeta();\n  }\n\n  getMeta(url?: string): void {\n    const img = new Image();\n    if (url) {\n      img.src = url;\n    } else {\n      img.src = this.medias[this.increment].uri;\n    }\n    this.setResponsiveImage(img);\n  }\n\n  setResponsiveImage(img: any): void {\n    this.setDesktopAspectRatio(img);\n  }\n\n  setMobileAspectRatio(img: any): void {\n    if (img.width < img.height) {\n      // @ts-ignore\n      this.slide.style.paddingTop = '156.25%';\n    } else {\n      // @ts-ignore\n      this.slide.style.paddingTop = '56.25%';\n      // @ts-ignore\n      this.slide.style.height = `${window.screen.width + 50}px`;\n    }\n  }\n\n  setDesktopAspectRatio(img: any,): void {\n    if (img.width < img.height) {\n      // @ts-ignore\n      this.slide.style.aspectRatio = '9/16';\n      // @ts-ignore\n\n      // @ts-ignore\n      this.slide.style.removeProperty('width');\n    } else {\n      // @ts-ignore\n      this.slide.style.width = `${window.screen.width}px`;\n      // @ts-ignore\n      this.slide.style.aspectRatio = '4/3';\n      // @ts-ignore\n      this.slide.style.removeProperty('height');\n    }\n  }\n\n  downloadPhoto(): void {\n    // @ts-ignore\n    document.getElementById('imgLink').click();\n  }\n}\n","<div class=\"text-right\">\n  <button class=\"float-btn\" mat-dialog-close mat-button>\n    <mat-icon>close</mat-icon>\n  </button>\n  <button class=\"mid-left nav-btn\" mat-button (click)=\"prev()\">\n    <mat-icon>chevron_left</mat-icon>\n  </button>\n  <button class=\"nav-btn mid-right\" (click)=\"next()\" mat-button>\n    <mat-icon>navigate_next</mat-icon>\n  </button>\n  <button (click)=\"downloadPhoto()\" class=\"float-down-btn\" mat-button>\n    <mat-icon>file_download</mat-icon>\n  </button>\n  <a id=\"imgLink\" download=\"imagename.png\" [href]=\"medias[increment].uri\"></a>\n</div>\n<div class=\"slide\" (swipeleft)=\"prev()\" (swiperight)=\"next()\" id=\"slide\"\n     [style.background-image]=\"'url(' + medias[increment].uri+ ')'\">\n  <div class=\"row\">\n    <h1>Marko</h1>\n    <div id=\"btn-col-1\" class=\"col-6 text-left\">\n    </div>\n    <div id=\"btn-col-2\" class=\"col-6 text-right\">\n    </div>\n  </div>\n</div>\n\n","import {Injectable} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LuxalLightboxComponent} from './luxal-lightbox.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LuxalLightboxService {\n\n  constructor(private dialog: MatDialog) { }\n\n  openGallery(data: any[]): void {\n    this.dialog.open(LuxalLightboxComponent, {\n      data,\n      width: window.screen.width <= 1024 ? '100%' : 'auto',\n      maxWidth: window.screen.width <= 1024 ? '100vw' : 'auto',\n    });\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport {LuxalLightboxComponent} from './luxal-lightbox.component';\n\n@NgModule({\n  declarations: [\n    LuxalLightboxComponent\n  ],\n  imports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n  ],\n  exports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    LuxalLightboxComponent,\n  ]\n})\nexport class LuxalLightboxModule {}\n","/*\n * Public API Surface of luxal-lightbox\n */\n\nexport * from './lib/luxal-lightbox.service';\nexport * from './lib/luxal-lightbox.component';\nexport * from './lib/luxal-lightbox.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}