{"hash":"fdbeda6784876df1d2633657db335d007d924699","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Pipe, Component, Inject, Injectable, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport * as i1 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i2 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nconst LANDSCAPE_ASPECT_RATIO = '4/3';\nconst LANDSCAPE_ASPECT_RATIO_PERCENTAGE = '56.25%';\nconst PORTRAIT_ASPECT_RATIO = '9/16';\nconst PORTRAIT_ASPECT_RATIO_PERCENTAGE = '156.25%';\n\nclass ImagePipe {\n    transform(image) {\n        if (window.screen.width <= 960) {\n            if (image.width < image.height) {\n                return { paddingTop: PORTRAIT_ASPECT_RATIO_PERCENTAGE };\n            }\n            else {\n                return { paddingTop: LANDSCAPE_ASPECT_RATIO_PERCENTAGE };\n            }\n        }\n        else {\n            if (image.height > image.width) {\n                return {\n                    height: `${window.screen.height + 150}px`,\n                    aspectRatio: PORTRAIT_ASPECT_RATIO,\n                };\n            }\n            else {\n                return {\n                    width: `${window.screen.width}px`,\n                    aspectRatio: LANDSCAPE_ASPECT_RATIO,\n                    paddingTop: 0,\n                };\n            }\n        }\n    }\n}\nImagePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: ImagePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nImagePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: ImagePipe, name: \"image\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: ImagePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'image',\n                }]\n        }] });\n\nclass LuxalLightboxComponent {\n    constructor(medias) {\n        this.medias = medias;\n        this.increment = 0;\n        this.isMobile = false;\n    }\n    ngOnInit() {\n        this.getImageData();\n        this.addArrowListener();\n    }\n    getImageData() {\n        for (let image of this.medias) {\n            let img = new Image();\n            img.src = image.uri;\n            img.onload = () => {\n                image.width = img.width;\n                image.height = img.height;\n            };\n        }\n    }\n    addArrowListener() {\n        document.addEventListener('keydown', (event) => {\n            switch (event.keyCode) {\n                case 37:\n                    this.prev();\n                    break;\n                case 39:\n                    this.next();\n                    break;\n            }\n        });\n    }\n    next() {\n        if (!(this.increment + 1 >= this.medias.length)) {\n            this.increment++;\n        }\n        else {\n            this.increment = 0;\n        }\n    }\n    prev() {\n        if (this.increment - 1 >= 0) {\n            this.increment--;\n        }\n        else {\n            this.increment = this.medias.length - 1;\n        }\n    }\n    downloadPhoto() {\n        // @ts-ignore\n        document.getElementById('imgLink').click();\n    }\n}\nLuxalLightboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxComponent, deps: [{ token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component });\nLuxalLightboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: LuxalLightboxComponent, selector: \"lib-luxal-lightbox\", ngImport: i0, template: \"<div class=\\\"text-right\\\">\\n  <button class=\\\"float-btn\\\" mat-dialog-close mat-button>\\n    <mat-icon>close</mat-icon>\\n  </button>\\n  <button class=\\\"mid-left nav-btn\\\" mat-button (click)=\\\"prev()\\\">\\n    <mat-icon>chevron_left</mat-icon>\\n  </button>\\n  <button class=\\\"nav-btn mid-right\\\" (click)=\\\"next()\\\" mat-button>\\n    <mat-icon>navigate_next</mat-icon>\\n  </button>\\n  <button (click)=\\\"downloadPhoto()\\\" class=\\\"float-down-btn\\\" mat-button>\\n    <mat-icon>file_download</mat-icon>\\n  </button>\\n  <a id=\\\"imgLink\\\" download=\\\"imagename.png\\\" [href]=\\\"medias[increment].uri\\\"></a>\\n</div>\\n<div\\n  class=\\\"slide\\\"\\n  (swipeleft)=\\\"prev()\\\"\\n  (swiperight)=\\\"next()\\\"\\n  [style.background-image]=\\\"'url(' + medias[increment].uri+ ')'\\\"\\n  [ngStyle]=\\\"(medias[increment]|image)\\\"\\n>\\n  <div class=\\\"row\\\">\\n    <div id=\\\"btn-col-1\\\" class=\\\"col-6 text-left\\\"></div>\\n    <div id=\\\"btn-col-2\\\" class=\\\"col-6 text-right\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\"::ng-deep .mat-dialog-container{padding:0!important}.slide{background-size:cover;overflow:hidden;max-width:100%;background-position:center}.nav-btn{background-color:transparent;color:#fff}.float-btn{margin-top:30px;color:#fff;margin-right:30px;position:absolute;top:0;right:0}.mid-left{top:50%;left:1rem;transform:translateY(-50%);position:absolute}.mid-right{top:50%;right:2rem;transform:translateY(-50%);position:absolute}.float-down-btn{position:fixed;bottom:4rem;z-index:3;right:2rem;background-color:transparent;color:#fff}@media screen and (max-width: 570px){.nav-btn{display:none}}.slide{zoom:.8}.slide{zoom:.7}.slide{zoom:.6}\\n\"], components: [{ type: i1.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i1$1.MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: [\"aria-label\", \"type\", \"mat-dialog-close\", \"matDialogClose\"], exportAs: [\"matDialogClose\"] }, { type: i4.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], pipes: { \"image\": ImagePipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-luxal-lightbox', template: \"<div class=\\\"text-right\\\">\\n  <button class=\\\"float-btn\\\" mat-dialog-close mat-button>\\n    <mat-icon>close</mat-icon>\\n  </button>\\n  <button class=\\\"mid-left nav-btn\\\" mat-button (click)=\\\"prev()\\\">\\n    <mat-icon>chevron_left</mat-icon>\\n  </button>\\n  <button class=\\\"nav-btn mid-right\\\" (click)=\\\"next()\\\" mat-button>\\n    <mat-icon>navigate_next</mat-icon>\\n  </button>\\n  <button (click)=\\\"downloadPhoto()\\\" class=\\\"float-down-btn\\\" mat-button>\\n    <mat-icon>file_download</mat-icon>\\n  </button>\\n  <a id=\\\"imgLink\\\" download=\\\"imagename.png\\\" [href]=\\\"medias[increment].uri\\\"></a>\\n</div>\\n<div\\n  class=\\\"slide\\\"\\n  (swipeleft)=\\\"prev()\\\"\\n  (swiperight)=\\\"next()\\\"\\n  [style.background-image]=\\\"'url(' + medias[increment].uri+ ')'\\\"\\n  [ngStyle]=\\\"(medias[increment]|image)\\\"\\n>\\n  <div class=\\\"row\\\">\\n    <div id=\\\"btn-col-1\\\" class=\\\"col-6 text-left\\\"></div>\\n    <div id=\\\"btn-col-2\\\" class=\\\"col-6 text-right\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\"::ng-deep .mat-dialog-container{padding:0!important}.slide{background-size:cover;overflow:hidden;max-width:100%;background-position:center}.nav-btn{background-color:transparent;color:#fff}.float-btn{margin-top:30px;color:#fff;margin-right:30px;position:absolute;top:0;right:0}.mid-left{top:50%;left:1rem;transform:translateY(-50%);position:absolute}.mid-right{top:50%;right:2rem;transform:translateY(-50%);position:absolute}.float-down-btn{position:fixed;bottom:4rem;z-index:3;right:2rem;background-color:transparent;color:#fff}@media screen and (max-width: 570px){.nav-btn{display:none}}.slide{zoom:.8}.slide{zoom:.7}.slide{zoom:.6}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DIALOG_DATA]\n                }] }]; } });\n\nclass LuxalLightboxService {\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    openGallery(data) {\n        this.dialog.open(LuxalLightboxComponent, {\n            data,\n            width: window.screen.width <= 1024 ? '100%' : 'auto',\n            maxWidth: window.screen.width <= 1024 ? '100vw' : 'auto',\n        });\n    }\n}\nLuxalLightboxService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, deps: [{ token: i1$1.MatDialog }], target: i0.ɵɵFactoryTarget.Injectable });\nLuxalLightboxService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.MatDialog }]; } });\n\nclass LuxalLightboxModule {\n}\nLuxalLightboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLuxalLightboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, declarations: [LuxalLightboxComponent, ImagePipe], imports: [MatDialogModule, MatButtonModule, MatIconModule, CommonModule], exports: [MatDialogModule,\n        MatButtonModule,\n        MatIconModule,\n        LuxalLightboxComponent] });\nLuxalLightboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, imports: [[MatDialogModule, MatButtonModule, MatIconModule, CommonModule], MatDialogModule,\n        MatButtonModule,\n        MatIconModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [LuxalLightboxComponent, ImagePipe],\n                    imports: [MatDialogModule, MatButtonModule, MatIconModule, CommonModule],\n                    exports: [\n                        MatDialogModule,\n                        MatButtonModule,\n                        MatIconModule,\n                        LuxalLightboxComponent,\n                    ],\n                }]\n        }] });\n\n/*\n * Public API Surface of luxal-lightbox\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LuxalLightboxComponent, LuxalLightboxModule, LuxalLightboxService };\n//# sourceMappingURL=luxal-lightbox.mjs.map\n","map":{"version":3,"file":"luxal-lightbox.mjs","sources":["../../../projects/luxal-lightbox/src/lib/constant/constant.ts","../../../projects/luxal-lightbox/src/lib/image.pipe.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.component.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.html","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.service.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.module.ts","../../../projects/luxal-lightbox/src/public-api.ts","../../../projects/luxal-lightbox/src/luxal-lightbox.ts"],"sourcesContent":["export const LANDSCAPE_ASPECT_RATIO='4/3'\n  export const   LANDSCAPE_ASPECT_RATIO_PERCENTAGE='56.25%'\n  export const PORTRAIT_ASPECT_RATIO='9/16'\n  export const PORTRAIT_ASPECT_RATIO_PERCENTAGE='156.25%'\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {\n  LANDSCAPE_ASPECT_RATIO,\n  LANDSCAPE_ASPECT_RATIO_PERCENTAGE,\n  PORTRAIT_ASPECT_RATIO,\n  PORTRAIT_ASPECT_RATIO_PERCENTAGE,\n} from './constant/constant';\nimport { ImageProperty } from './model/ImageProperty';\n\n@Pipe({\n  name: 'image',\n})\nexport class ImagePipe implements PipeTransform {\n  transform(image: any): ImageProperty {\n    if (window.screen.width <= 960) {\n      if (image.width < image.height) {\n        return { paddingTop: PORTRAIT_ASPECT_RATIO_PERCENTAGE };\n      } else {\n        return { paddingTop: LANDSCAPE_ASPECT_RATIO_PERCENTAGE };\n      }\n    } else {\n      if (image.height > image.width) {\n        return {\n          height: `${window.screen.height + 150}px`,\n          aspectRatio: PORTRAIT_ASPECT_RATIO,\n        };\n      } else {\n        return {\n          width: `${window.screen.width}px`,\n          aspectRatio: LANDSCAPE_ASPECT_RATIO,\n          paddingTop: 0,\n        };\n      }\n    }\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'lib-luxal-lightbox',\n  templateUrl: './luxal-lightbox.html',\n  styleUrls: ['./luxal-lightbox.sass'],\n})\nexport class LuxalLightboxComponent implements OnInit {\n  increment = 0;\n  isMobile = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public medias: any[]) {}\n\n  ngOnInit(): void {\n    this.getImageData();\n    this.addArrowListener();\n  }\n\n  getImageData() {\n    for (let image of this.medias) {\n      let img = new Image();\n      img.src = image.uri;\n      img.onload = () => {\n        image.width = img.width;\n        image.height = img.height;\n      };\n    }\n  }\n  addArrowListener(): void {\n    document.addEventListener('keydown', (event) => {\n      switch (event.keyCode) {\n        case 37:\n          this.prev();\n          break;\n        case 39:\n          this.next();\n          break;\n      }\n    });\n  }\n\n  next(): void {\n    if (!(this.increment + 1 >= this.medias.length)) {\n      this.increment++;\n    } else {\n      this.increment = 0;\n    }\n  }\n\n  prev(): void {\n    if (this.increment - 1 >= 0) {\n      this.increment--;\n    } else {\n      this.increment = this.medias.length - 1;\n    }\n  }\n\n  downloadPhoto(): void {\n    // @ts-ignore\n    document.getElementById('imgLink').click();\n  }\n}\n","<div class=\"text-right\">\n  <button class=\"float-btn\" mat-dialog-close mat-button>\n    <mat-icon>close</mat-icon>\n  </button>\n  <button class=\"mid-left nav-btn\" mat-button (click)=\"prev()\">\n    <mat-icon>chevron_left</mat-icon>\n  </button>\n  <button class=\"nav-btn mid-right\" (click)=\"next()\" mat-button>\n    <mat-icon>navigate_next</mat-icon>\n  </button>\n  <button (click)=\"downloadPhoto()\" class=\"float-down-btn\" mat-button>\n    <mat-icon>file_download</mat-icon>\n  </button>\n  <a id=\"imgLink\" download=\"imagename.png\" [href]=\"medias[increment].uri\"></a>\n</div>\n<div\n  class=\"slide\"\n  (swipeleft)=\"prev()\"\n  (swiperight)=\"next()\"\n  [style.background-image]=\"'url(' + medias[increment].uri+ ')'\"\n  [ngStyle]=\"(medias[increment]|image)\"\n>\n  <div class=\"row\">\n    <div id=\"btn-col-1\" class=\"col-6 text-left\"></div>\n    <div id=\"btn-col-2\" class=\"col-6 text-right\"></div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LuxalLightboxComponent } from './luxal-lightbox.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LuxalLightboxService {\n  constructor(private dialog: MatDialog) {}\n\n  openGallery(data: any[]): void {\n    this.dialog.open(LuxalLightboxComponent, {\n      data,\n      width: window.screen.width <= 1024 ? '100%' : 'auto',\n      maxWidth: window.screen.width <= 1024 ? '100vw' : 'auto',\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { LuxalLightboxComponent } from './luxal-lightbox.component';\nimport { ImagePipe } from './image.pipe';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [LuxalLightboxComponent, ImagePipe],\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, CommonModule],\n  exports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    LuxalLightboxComponent,\n  ],\n})\nexport class LuxalLightboxModule {}\n","/*\n * Public API Surface of luxal-lightbox\n */\n\nexport * from './lib/luxal-lightbox.service';\nexport * from './lib/luxal-lightbox.component';\nexport * from './lib/luxal-lightbox.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Pipe, Component, Inject, Injectable, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport * as i1 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i2 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nconst LANDSCAPE_ASPECT_RATIO = '4/3';\nconst LANDSCAPE_ASPECT_RATIO_PERCENTAGE = '56.25%';\nconst PORTRAIT_ASPECT_RATIO = '9/16';\nconst PORTRAIT_ASPECT_RATIO_PERCENTAGE = '156.25%';\n\nclass ImagePipe {\n    transform(image) {\n        if (window.screen.width <= 960) {\n            if (image.width < image.height) {\n                return { paddingTop: PORTRAIT_ASPECT_RATIO_PERCENTAGE };\n            }\n            else {\n                return { paddingTop: LANDSCAPE_ASPECT_RATIO_PERCENTAGE };\n            }\n        }\n        else {\n            if (image.height > image.width) {\n                return {\n                    height: `${window.screen.height + 150}px`,\n                    aspectRatio: PORTRAIT_ASPECT_RATIO,\n                };\n            }\n            else {\n                return {\n                    width: `${window.screen.width}px`,\n                    aspectRatio: LANDSCAPE_ASPECT_RATIO,\n                    paddingTop: 0,\n                };\n            }\n        }\n    }\n}\nImagePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: ImagePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nImagePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: ImagePipe, name: \"image\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: ImagePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'image',\n                }]\n        }] });\n\nclass LuxalLightboxComponent {\n    constructor(medias) {\n        this.medias = medias;\n        this.increment = 0;\n        this.isMobile = false;\n    }\n    ngOnInit() {\n        this.getImageData();\n        this.addArrowListener();\n    }\n    getImageData() {\n        for (let image of this.medias) {\n            let img = new Image();\n            img.src = image.uri;\n            img.onload = () => {\n                image.width = img.width;\n                image.height = img.height;\n            };\n        }\n    }\n    addArrowListener() {\n        document.addEventListener('keydown', (event) => {\n            switch (event.keyCode) {\n                case 37:\n                    this.prev();\n                    break;\n                case 39:\n                    this.next();\n                    break;\n            }\n        });\n    }\n    next() {\n        if (!(this.increment + 1 >= this.medias.length)) {\n            this.increment++;\n        }\n        else {\n            this.increment = 0;\n        }\n    }\n    prev() {\n        if (this.increment - 1 >= 0) {\n            this.increment--;\n        }\n        else {\n            this.increment = this.medias.length - 1;\n        }\n    }\n    downloadPhoto() {\n        // @ts-ignore\n        document.getElementById('imgLink').click();\n    }\n}\nLuxalLightboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxComponent, deps: [{ token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component });\nLuxalLightboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: LuxalLightboxComponent, selector: \"lib-luxal-lightbox\", ngImport: i0, template: \"<div class=\\\"text-right\\\">\\n  <button class=\\\"float-btn\\\" mat-dialog-close mat-button>\\n    <mat-icon>close</mat-icon>\\n  </button>\\n  <button class=\\\"mid-left nav-btn\\\" mat-button (click)=\\\"prev()\\\">\\n    <mat-icon>chevron_left</mat-icon>\\n  </button>\\n  <button class=\\\"nav-btn mid-right\\\" (click)=\\\"next()\\\" mat-button>\\n    <mat-icon>navigate_next</mat-icon>\\n  </button>\\n  <button (click)=\\\"downloadPhoto()\\\" class=\\\"float-down-btn\\\" mat-button>\\n    <mat-icon>file_download</mat-icon>\\n  </button>\\n  <a id=\\\"imgLink\\\" download=\\\"imagename.png\\\" [href]=\\\"medias[increment].uri\\\"></a>\\n</div>\\n<div\\n  class=\\\"slide\\\"\\n  (swipeleft)=\\\"prev()\\\"\\n  (swiperight)=\\\"next()\\\"\\n  [style.background-image]=\\\"'url(' + medias[increment].uri+ ')'\\\"\\n  [ngStyle]=\\\"(medias[increment]|image)\\\"\\n>\\n  <div class=\\\"row\\\">\\n    <div id=\\\"btn-col-1\\\" class=\\\"col-6 text-left\\\"></div>\\n    <div id=\\\"btn-col-2\\\" class=\\\"col-6 text-right\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\"::ng-deep .mat-dialog-container{padding:0!important}.slide{background-size:cover;overflow:hidden;max-width:100%;background-position:center}.nav-btn{background-color:transparent;color:#fff}.float-btn{margin-top:30px;color:#fff;margin-right:30px;position:absolute;top:0;right:0}.mid-left{top:50%;left:1rem;transform:translateY(-50%);position:absolute}.mid-right{top:50%;right:2rem;transform:translateY(-50%);position:absolute}.float-down-btn{position:fixed;bottom:4rem;z-index:3;right:2rem;background-color:transparent;color:#fff}@media screen and (max-width: 570px){.nav-btn{display:none}}.slide{zoom:.8}.slide{zoom:.7}.slide{zoom:.6}\\n\"], components: [{ type: i1.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i1$1.MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: [\"aria-label\", \"type\", \"mat-dialog-close\", \"matDialogClose\"], exportAs: [\"matDialogClose\"] }, { type: i4.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], pipes: { \"image\": ImagePipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-luxal-lightbox', template: \"<div class=\\\"text-right\\\">\\n  <button class=\\\"float-btn\\\" mat-dialog-close mat-button>\\n    <mat-icon>close</mat-icon>\\n  </button>\\n  <button class=\\\"mid-left nav-btn\\\" mat-button (click)=\\\"prev()\\\">\\n    <mat-icon>chevron_left</mat-icon>\\n  </button>\\n  <button class=\\\"nav-btn mid-right\\\" (click)=\\\"next()\\\" mat-button>\\n    <mat-icon>navigate_next</mat-icon>\\n  </button>\\n  <button (click)=\\\"downloadPhoto()\\\" class=\\\"float-down-btn\\\" mat-button>\\n    <mat-icon>file_download</mat-icon>\\n  </button>\\n  <a id=\\\"imgLink\\\" download=\\\"imagename.png\\\" [href]=\\\"medias[increment].uri\\\"></a>\\n</div>\\n<div\\n  class=\\\"slide\\\"\\n  (swipeleft)=\\\"prev()\\\"\\n  (swiperight)=\\\"next()\\\"\\n  [style.background-image]=\\\"'url(' + medias[increment].uri+ ')'\\\"\\n  [ngStyle]=\\\"(medias[increment]|image)\\\"\\n>\\n  <div class=\\\"row\\\">\\n    <div id=\\\"btn-col-1\\\" class=\\\"col-6 text-left\\\"></div>\\n    <div id=\\\"btn-col-2\\\" class=\\\"col-6 text-right\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\"::ng-deep .mat-dialog-container{padding:0!important}.slide{background-size:cover;overflow:hidden;max-width:100%;background-position:center}.nav-btn{background-color:transparent;color:#fff}.float-btn{margin-top:30px;color:#fff;margin-right:30px;position:absolute;top:0;right:0}.mid-left{top:50%;left:1rem;transform:translateY(-50%);position:absolute}.mid-right{top:50%;right:2rem;transform:translateY(-50%);position:absolute}.float-down-btn{position:fixed;bottom:4rem;z-index:3;right:2rem;background-color:transparent;color:#fff}@media screen and (max-width: 570px){.nav-btn{display:none}}.slide{zoom:.8}.slide{zoom:.7}.slide{zoom:.6}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DIALOG_DATA]\n                    }] }];\n    } });\n\nclass LuxalLightboxService {\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    openGallery(data) {\n        this.dialog.open(LuxalLightboxComponent, {\n            data,\n            width: window.screen.width <= 1024 ? '100%' : 'auto',\n            maxWidth: window.screen.width <= 1024 ? '100vw' : 'auto',\n        });\n    }\n}\nLuxalLightboxService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, deps: [{ token: i1$1.MatDialog }], target: i0.ɵɵFactoryTarget.Injectable });\nLuxalLightboxService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.MatDialog }]; } });\n\nclass LuxalLightboxModule {\n}\nLuxalLightboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLuxalLightboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, declarations: [LuxalLightboxComponent, ImagePipe], imports: [MatDialogModule, MatButtonModule, MatIconModule, CommonModule], exports: [MatDialogModule,\n        MatButtonModule,\n        MatIconModule,\n        LuxalLightboxComponent] });\nLuxalLightboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, imports: [[MatDialogModule, MatButtonModule, MatIconModule, CommonModule], MatDialogModule,\n        MatButtonModule,\n        MatIconModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: LuxalLightboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [LuxalLightboxComponent, ImagePipe],\n                    imports: [MatDialogModule, MatButtonModule, MatIconModule, CommonModule],\n                    exports: [\n                        MatDialogModule,\n                        MatButtonModule,\n                        MatIconModule,\n                        LuxalLightboxComponent,\n                    ],\n                }]\n        }] });\n\n/*\n * Public API Surface of luxal-lightbox\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LuxalLightboxComponent, LuxalLightboxModule, LuxalLightboxService };\n//# sourceMappingURL=luxal-lightbox.mjs.map\n","map":{"version":3,"file":"luxal-lightbox.mjs","sources":["../../../projects/luxal-lightbox/src/lib/constant/constant.ts","../../../projects/luxal-lightbox/src/lib/image.pipe.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.component.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.html","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.service.ts","../../../projects/luxal-lightbox/src/lib/luxal-lightbox.module.ts","../../../projects/luxal-lightbox/src/public-api.ts","../../../projects/luxal-lightbox/src/luxal-lightbox.ts"],"sourcesContent":["export const LANDSCAPE_ASPECT_RATIO='4/3'\n  export const   LANDSCAPE_ASPECT_RATIO_PERCENTAGE='56.25%'\n  export const PORTRAIT_ASPECT_RATIO='9/16'\n  export const PORTRAIT_ASPECT_RATIO_PERCENTAGE='156.25%'\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {\n  LANDSCAPE_ASPECT_RATIO,\n  LANDSCAPE_ASPECT_RATIO_PERCENTAGE,\n  PORTRAIT_ASPECT_RATIO,\n  PORTRAIT_ASPECT_RATIO_PERCENTAGE,\n} from './constant/constant';\nimport { ImageProperty } from './model/ImageProperty';\n\n@Pipe({\n  name: 'image',\n})\nexport class ImagePipe implements PipeTransform {\n  transform(image: any): ImageProperty {\n    if (window.screen.width <= 960) {\n      if (image.width < image.height) {\n        return { paddingTop: PORTRAIT_ASPECT_RATIO_PERCENTAGE };\n      } else {\n        return { paddingTop: LANDSCAPE_ASPECT_RATIO_PERCENTAGE };\n      }\n    } else {\n      if (image.height > image.width) {\n        return {\n          height: `${window.screen.height + 150}px`,\n          aspectRatio: PORTRAIT_ASPECT_RATIO,\n        };\n      } else {\n        return {\n          width: `${window.screen.width}px`,\n          aspectRatio: LANDSCAPE_ASPECT_RATIO,\n          paddingTop: 0,\n        };\n      }\n    }\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'lib-luxal-lightbox',\n  templateUrl: './luxal-lightbox.html',\n  styleUrls: ['./luxal-lightbox.sass'],\n})\nexport class LuxalLightboxComponent implements OnInit {\n  increment = 0;\n  isMobile = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public medias: any[]) {}\n\n  ngOnInit(): void {\n    this.getImageData();\n    this.addArrowListener();\n  }\n\n  getImageData() {\n    for (let image of this.medias) {\n      let img = new Image();\n      img.src = image.uri;\n      img.onload = () => {\n        image.width = img.width;\n        image.height = img.height;\n      };\n    }\n  }\n  addArrowListener(): void {\n    document.addEventListener('keydown', (event) => {\n      switch (event.keyCode) {\n        case 37:\n          this.prev();\n          break;\n        case 39:\n          this.next();\n          break;\n      }\n    });\n  }\n\n  next(): void {\n    if (!(this.increment + 1 >= this.medias.length)) {\n      this.increment++;\n    } else {\n      this.increment = 0;\n    }\n  }\n\n  prev(): void {\n    if (this.increment - 1 >= 0) {\n      this.increment--;\n    } else {\n      this.increment = this.medias.length - 1;\n    }\n  }\n\n  downloadPhoto(): void {\n    // @ts-ignore\n    document.getElementById('imgLink').click();\n  }\n}\n","<div class=\"text-right\">\n  <button class=\"float-btn\" mat-dialog-close mat-button>\n    <mat-icon>close</mat-icon>\n  </button>\n  <button class=\"mid-left nav-btn\" mat-button (click)=\"prev()\">\n    <mat-icon>chevron_left</mat-icon>\n  </button>\n  <button class=\"nav-btn mid-right\" (click)=\"next()\" mat-button>\n    <mat-icon>navigate_next</mat-icon>\n  </button>\n  <button (click)=\"downloadPhoto()\" class=\"float-down-btn\" mat-button>\n    <mat-icon>file_download</mat-icon>\n  </button>\n  <a id=\"imgLink\" download=\"imagename.png\" [href]=\"medias[increment].uri\"></a>\n</div>\n<div\n  class=\"slide\"\n  (swipeleft)=\"prev()\"\n  (swiperight)=\"next()\"\n  [style.background-image]=\"'url(' + medias[increment].uri+ ')'\"\n  [ngStyle]=\"(medias[increment]|image)\"\n>\n  <div class=\"row\">\n    <div id=\"btn-col-1\" class=\"col-6 text-left\"></div>\n    <div id=\"btn-col-2\" class=\"col-6 text-right\"></div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LuxalLightboxComponent } from './luxal-lightbox.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LuxalLightboxService {\n  constructor(private dialog: MatDialog) {}\n\n  openGallery(data: any[]): void {\n    this.dialog.open(LuxalLightboxComponent, {\n      data,\n      width: window.screen.width <= 1024 ? '100%' : 'auto',\n      maxWidth: window.screen.width <= 1024 ? '100vw' : 'auto',\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { LuxalLightboxComponent } from './luxal-lightbox.component';\nimport { ImagePipe } from './image.pipe';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [LuxalLightboxComponent, ImagePipe],\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, CommonModule],\n  exports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    LuxalLightboxComponent,\n  ],\n})\nexport class LuxalLightboxModule {}\n","/*\n * Public API Surface of luxal-lightbox\n */\n\nexport * from './lib/luxal-lightbox.service';\nexport * from './lib/luxal-lightbox.component';\nexport * from './lib/luxal-lightbox.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}